{"/home/travis/build/npmtest/node-npmtest-levelgraph/test.js":"/* istanbul instrument in package npmtest_levelgraph */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-levelgraph/lib.npmtest_levelgraph.js":"/* istanbul instrument in package npmtest_levelgraph */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_levelgraph = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_levelgraph = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-levelgraph/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-levelgraph && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_levelgraph */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_levelgraph\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_levelgraph.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_levelgraph.rollup.js'] =\n            local.assetsDict['/assets.npmtest_levelgraph.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_levelgraph.__dirname + '/lib.npmtest_levelgraph.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-levelgraph/node_modules/levelgraph/lib/levelgraph.js":"/*\nCopyright (c) 2013-2017 Matteo Collina and LevelGraph Contributors\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// require stream before anything else\n// or browserify will fail to load it\nrequire('stream');\n\nvar filterStream = require('./filterstream')\n  , materializer = require('./materializerstream')\n  , Variable = require('./variable')\n  , Navigator = require('./navigator')\n  , extend = require('xtend')\n  , utilities = require('./utilities')\n  , queryplanner = require('./queryplanner')\n  , PassThrough = require('readable-stream').PassThrough\n  , WriteStream = require('./writestream')\n  , pump = require('pump')\n  , levelWriteStream = require('level-ws')\n  , Leveljs\n  , searchStream\n  , doAction\n  , doActionStream;\n\nvar joinDefaults = {\n  solution: {}\n};\n\nmodule.exports = function levelgraph(leveldb, options) {\n\n  var db;\n\n  options = options || {};\n\n  db = {\n    getStream: function(pattern, options) {\n      var query = utilities.createQuery(pattern, options)\n        , stream = leveldb.createValueStream(query);\n\n      if (pattern.filter || pattern.offset) {\n        stream = pump(stream, filterStream({\n            filter: pattern.filter\n          , offset: pattern.offset\n        }));\n      }\n\n      return stream;\n    }\n    , get: utilities.wrapCallback('getStream')\n    , createQuery: utilities.createQuery\n    , put: doAction('put', leveldb)\n    , del: doAction('del', leveldb)\n    , putStream: doActionStream('put', leveldb)\n    , delStream: doActionStream('del', leveldb)\n    , close: function(callback) {\n        if (typeof leveldb.close === 'function') {\n          leveldb.close(callback);\n        } else if(typeof callback === 'function') {\n          callback();\n        }\n      }\n    , v: Variable\n    , searchStream: searchStream(leveldb, options)\n    , search: utilities.wrapCallback('searchStream')\n    , isOpen: function() {\n        return leveldb.isOpen();\n      }\n    , nav: function(start) {\n      return new Navigator({ start: start, db: this });\n    }\n    , generateBatch: utilities.generateBatch\n  };\n\n  db.joinStream = function(a, b, c) {\n    console.warn('joinStream is deprecated, use searchStream instead');\n    return db.searchStream(a, b, c);\n  };\n\n  db.join = function(a, b, c) {\n    console.warn('join is deprecated, use search instead');\n    return db.search(a, b, c);\n  };\n\n  db.approximateSize = function(pattern, callback) {\n    var query = utilities.createQuery(utilities.queryMask(pattern));\n    leveldb.db.approximateSize(query.start, query.end, function (error, size) {\n      callback(error, error ? null : size >> 8);\n    });\n  };\n\n  return db;\n};\n\nsearchStream = function(db, options) {\n  options = extend({ joinAlgorithm: 'sort' }, options);\n\n  var planner = queryplanner(db, options);\n\n  return function(query, options) {\n    var that = this\n      , result = new PassThrough({ objectMode: true });\n\n    options = extend(joinDefaults, options);\n\n    if (!query || query.length === 0) {\n      result.end();\n      return result;\n    } else if (!Array.isArray(query)) {\n      query = [ query ];\n    }\n\n    planner(query, function(err, newquery) {\n      if (err) {\n        result.emit('error', err);\n        return;\n      }\n\n      var streams = newquery.map(function(triple) {\n        var stream = triple.stream\n          , index  = triple.index;\n\n        delete triple.stream;\n        delete triple.index;\n        return stream({ triple: triple, db: that, index: index });\n      });\n\n      streams[0].start = true;\n      streams[0].end(options.solution);\n\n      if (options.limit) {\n        streams[streams.length - 1].limit = options.limit;\n      }\n\n      if (options.filter || options.offset) {\n        streams.push(filterStream({\n            filter: options.filter\n          , offset: options.offset\n        }));\n      }\n\n      if (options.materialized) {\n        streams.push(materializer({\n          pattern: options.materialized\n        }));\n      }\n\n      streams.push(result);\n      pump.apply(null, streams);\n    });\n\n    return result;\n  };\n};\n\ndoAction = function(action, leveldb) {\n  return function(triples, options, cb) {\n    if ('function' === typeof options) {\n      cb = options;\n      options = {};\n    }\n\n    if(!triples.reduce) {\n      triples = [triples];\n    }\n\n    var actions = triples.reduce(function(acc, triple) {\n      return acc.concat(utilities.generateBatch(triple, action));\n    }, []);\n\n    leveldb.batch(actions, options, cb);\n  };\n};\n\ndoActionStream = function(type, leveldb) {\n\n  // also check leveldb.isClient for multilevel compatibility\n  if (!leveldb.createWriteStream || leveldb.isClient) {\n    leveldb = levelWriteStream(leveldb);\n  }\n\n  return function() {\n    var levelStream = leveldb.createWriteStream({ type: type });\n    var writeStream = new WriteStream();\n    writeStream.pipe(levelStream);\n    levelStream.on('error', function(err) {\n      writeStream.emit('error', err);\n    });\n    levelStream.on('close', function() {\n      writeStream.emit('close');\n    });\n    return writeStream;\n  };\n};\n","/home/travis/build/npmtest/node-npmtest-levelgraph/node_modules/levelgraph/lib/filterstream.js":"/*\nCopyright (c) 2013-2017 Matteo Collina and LevelGraph Contributors\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar Transform = require('readable-stream').Transform\n  , inherits = require('inherits');\n\nfunction filterOneArgument(data, encoding, done) {\n\n  if ((!this.offset || ++this._offsetCounter > this.offset) &&\n      (!this.filter || this.filter(data))) {\n    this.push(data);\n  }\n\n  done();\n}\n\nfunction filterTwoArguments(data, encoding, done) {\n  var that = this;\n\n  // this is called only if we have a filter\n  this.filter(data, function(err, data) {\n    if (data && (!that.offset || ++that._offsetCounter > that.offset)) {\n      that.push(data);\n    }\n    done(err);\n  });\n}\n\nfunction FilterStream(options) {\n  if (!(this instanceof FilterStream)) {\n    return new FilterStream(options);\n  }\n\n  options.objectMode = true;\n\n  Transform.call(this, options);\n\n  var that = this;\n\n  this.filter = options.filter;\n  this.offset = options.offset;\n\n  this._offsetCounter = 0;\n\n  this._destroyed = false;\n\n  if (this.filter && this.filter.length === 2) {\n    this._transform = filterTwoArguments;\n  }\n}\n\ninherits(FilterStream, Transform);\n\nFilterStream.prototype._transform = filterOneArgument;\n\nFilterStream.prototype.destroy = function() {\n  if (!this._destroyed) {\n    this.push(null);\n  }\n  this._destroyed = true;\n};\n\nmodule.exports = FilterStream;\n","/home/travis/build/npmtest/node-npmtest-levelgraph/node_modules/levelgraph/lib/materializerstream.js":"/*\nCopyright (c) 2013-2017 Matteo Collina and LevelGraph Contributors\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar Transform = require('readable-stream').Transform\n  , inherits = require('inherits')\n  , materializer = require('./utilities').materializer;\n\nfunction MaterializerStream(options) {\n  if (!(this instanceof MaterializerStream)) {\n    return new MaterializerStream(options);\n  }\n\n  options.objectMode = true;\n\n  Transform.call(this, options);\n\n  this.pattern = options.pattern;\n}\n\ninherits(MaterializerStream, Transform);\n\nMaterializerStream.prototype._transform = function(data, encoding, done) {\n\n  this.push(materializer(this.pattern, data));\n\n  done();\n};\n\nmodule.exports = MaterializerStream;\n","/home/travis/build/npmtest/node-npmtest-levelgraph/node_modules/levelgraph/lib/utilities.js":"/*\nCopyright (c) 2013-2017 Matteo Collina and LevelGraph Contributors\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar CallbackStream = require('callback-stream')\n  , Variable       = require('./variable')\n  , lodashKeys     = require('lodash.keys')\n  , defs = {\n      spo: ['subject', 'predicate', 'object'],\n      sop: ['subject', 'object', 'predicate'],\n      pos: ['predicate', 'object', 'subject'],\n      pso: ['predicate', 'subject', 'object'],\n      ops: ['object', 'predicate', 'subject'],\n      osp: ['object', 'subject', 'predicate']\n    };\nvar upperBoundChar = '\\udbff\\udfff';\n\nmodule.exports.defs = defs;\n\nfunction wrapCallback(method) {\n  return function(query, cb) {\n    var args = Array.prototype.slice.call(arguments, 0)\n      , callback = args.pop()\n      , stream = null;\n\n    stream = this[method].apply(this, args);\n\n    stream.pipe(new CallbackStream({ objectMode: true }, callback));\n  };\n}\n\nmodule.exports.wrapCallback = wrapCallback;\n\nfunction escape(value) {\n  if (typeof value === 'string' || value instanceof String) {\n    return value.replace(/(\\\\|:)/g,'\\\\$&');\n  }\n  return value;\n}\n\nmodule.exports.escape = escape;\n\nfunction genKey(key, triple) {\n  var result = key, def = defs[key], value, i;\n\n  for (i = 0; (value = triple[def[i]]) !== null &&\n              value !== undefined; i++) {\n    result += '::' + escape(value);\n  }\n\n  if (i < 3) {\n    result += '::';\n  }\n\n  return result;\n}\n\nmodule.exports.genKey = genKey;\n\nvar defKeys = Object.keys(defs);\nfunction genKeys(triple) {\n  var i, result = [];\n\n  for (i = 0; i < defKeys.length; i++) {\n    result.push(genKey(defKeys[i], triple));\n  }\n\n  return result;\n}\n\nmodule.exports.genKeys = genKeys;\n\nfunction possibleIndexes(types) {\n  var result = Object.keys(defs).filter(function(key) {\n    var matches = 0;\n    return defs[key].every(function (e, i) {\n      if (types.indexOf(e) >= 0) {\n        matches++;\n        return true;\n      }\n\n      if (matches === types.length) {\n        return true;\n      }\n    });\n  });\n\n  result.sort();\n\n  return result;\n}\n\nmodule.exports.possibleIndexes = possibleIndexes;\n\nfunction findIndex(types, preferiteIndex) {\n  var result = possibleIndexes(types)\n    , index\n    , there;\n\n  there = result.some(function(r) {\n    return r === preferiteIndex;\n  });\n\n  if (preferiteIndex && there) {\n    index = preferiteIndex;\n  } else {\n    index = result[0];\n  }\n\n  return index;\n}\n\nmodule.exports.findIndex = findIndex;\n\nfunction typesFromPattern(pattern) {\n  return Object.keys(pattern).filter(function(key) {\n    switch(key) {\n      case 'subject':\n        return !!pattern.subject;\n      case 'predicate':\n        return !!pattern.predicate;\n      case 'object':\n        return !!pattern.object;\n      default:\n        return false;\n    }\n  });\n}\n\nfunction applyUpperBoundChar(key) {\n  var parts = key.split('::');\n  var len = parts.length;\n  return len === 4 && parts[len-1] !== '' ? key : key + upperBoundChar;\n}\n\nfunction createQuery(pattern, options) {\n  var types = typesFromPattern(pattern)\n    , preferiteIndex = options && options.index\n    , index = findIndex(types, preferiteIndex)\n    , key = genKey(index, pattern, '')\n    , limit = pattern.limit\n    , reverse = pattern.reverse || false\n    , start = reverse ? applyUpperBoundChar(key) : key\n    , end = reverse ? key : applyUpperBoundChar(key)\n    , query = {\n          start: start\n        , end: end\n        , reverse: reverse\n        , fillCache: true\n        , limit: typeof limit === 'number' && limit || -1\n        , highWaterMark: 16\n        , valueEncoding: 'json'\n      };\n\n  return query;\n}\n\nmodule.exports.createQuery = createQuery;\n\nfunction generateBatch(triple, action) {\n  if (!action) {\n    action = 'put';\n  }\n  var json = JSON.stringify(triple);\n  return genKeys(triple).map(function(key) {\n    return { type: action, key: key, value: json };\n  });\n}\n\nmodule.exports.generateBatch = generateBatch;\n\nfunction materializer(pattern, data) {\n  return Object.keys(pattern)\n               .reduce(function(result, key) {\n\n    if (pattern[key] instanceof Variable) {\n      result[key] = data[pattern[key].name];\n    } else {\n      result[key] = pattern[key];\n    }\n\n    return result;\n  }, {});\n}\n\nmodule.exports.materializer = materializer;\n\n(function() {\n  var a, b, c;\n\n  a = function(key) {\n    return defs.spo.indexOf(key) >= 0;\n  };\n\n  b = function(triple, key) {\n    return typeof triple[key] !== 'object';\n  };\n\n  c = function(triple, key) {\n    return triple[key] instanceof Variable;\n  };\n\n  var objectMask = function objectMask(criteria, object) {\n    return lodashKeys(object).\n      filter(a).\n      filter(function(key) {\n        return criteria(object, key);\n      }).\n      reduce(function(acc, key) {\n        acc[key] = object[key];\n        return acc;\n      },\n    {});\n  };\n\n  module.exports.queryMask = function queryMask(object) {\n    return objectMask(b, object);\n  };\n\n  module.exports.variablesMask = function variablesMask(object) {\n    return objectMask(c, object);\n  };\n})();\n\nvar variablesMask = module.exports.variablesMask;\n\nfunction maskUpdater(pattern) {\n  var variables = variablesMask(pattern);\n  return function(solution, mask) {\n    return Object.keys(variables).reduce(function(newMask, key) {\n      var variable = variables[key];\n      if (variable.isBound(solution)) {\n        newMask[key] = solution[variable.name];\n      }\n      newMask.filter = pattern.filter;\n      return newMask;\n    }, Object.keys(mask).reduce(function(acc, key) {\n      acc[key] = mask[key];\n      return acc;\n    }, {}));\n  };\n}\n\nmodule.exports.maskUpdater = maskUpdater;\n\nfunction matcher(pattern) {\n  var variables = variablesMask(pattern);\n\n  return function realMatcher(solution, triple) {\n    var key, bindable = true, newsolution = solution;\n\n    for (key in variables) {\n      if (newsolution && variables.hasOwnProperty(key)) {\n        newsolution = variables[key].bind(newsolution, triple[key]);\n      }\n    }\n\n    return newsolution;\n  };\n}\n\nmodule.exports.matcher = matcher;\n","/home/travis/build/npmtest/node-npmtest-levelgraph/node_modules/levelgraph/lib/variable.js":"/*\nCopyright (c) 2013-2017 Matteo Collina and LevelGraph Contributors\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\nfunction Variable(name) {\n  if (!(this instanceof Variable)) {\n    return new Variable(name);\n  }\n\n  this.name = name;\n}\n\nVariable.prototype.bind = function(solution, value) {\n  var newsolution = {}\n    , key;\n\n  if (!this.isBindable(solution, value)) {\n    return null;\n  }\n\n  for (key in solution) {\n    if (solution.hasOwnProperty(key)) {\n      newsolution[key] = solution[key];\n    }\n  }\n\n  newsolution[this.name] = value;\n\n  return newsolution;\n};\n\nVariable.prototype.isBound = function(solution) {\n  return solution[this.name] && true || false;\n};\n\nVariable.prototype.isBindable = function(solution, value) {\n  return !solution[this.name] || solution[this.name] === value;\n};\n\nmodule.exports = Variable;\n","/home/travis/build/npmtest/node-npmtest-levelgraph/node_modules/levelgraph/lib/navigator.js":"/*\nCopyright (c) 2013-2017 Matteo Collina and LevelGraph Contributors\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar Variable = require('./variable')\n  , Transform = require('readable-stream').Transform\n  , CallbackStream = require('callback-stream')\n  , pump = require('pump')\n  , wrapCallback = require('./utilities').wrapCallback;\n\nfunction NavigatorStream(options) {\n  if (!(this instanceof NavigatorStream)) {\n    return new NavigatorStream(options);\n  }\n\n  options.objectMode = true;\n\n  Transform.call(this, options);\n\n  this._lastElement = options._lastElement;\n}\n\nNavigatorStream.prototype = Object.create(\n  Transform.prototype,\n  { constructor: { value: NavigatorStream } }\n);\n\nNavigatorStream.prototype._transform = function(data, encoding, done) {\n  var value = data[this._lastElement.name] || this._lastElement;\n  this.push(value);\n  done();\n};\n\nfunction Navigator(options) {\n  if (!(this instanceof Navigator)) {\n    return new Navigator(options);\n  }\n\n  this.db = options.db;\n  this._conditions = [];\n  this._initialSolution = {};\n\n  var count = 0;\n  this._nextVar = function() {\n    return this.db.v('x' + count++);\n  };\n\n  this.go(options.start);\n}\n\nfunction arch(varKey, lastKey) {\n  return function(predicate) {\n    var triple = {\n      predicate: predicate\n    };\n\n    triple[varKey] = this._nextVar();\n    triple[lastKey] = this._lastElement;\n\n    this._conditions.push(triple);\n\n    this._lastElement = triple[varKey];\n\n    return this;\n  };\n}\n\nNavigator.prototype.archOut = arch('object', 'subject');\nNavigator.prototype.archIn = arch('subject', 'object');\n\nNavigator.prototype.bind  = function (value) {\n  this._initialSolution[this._lastElement.name] = value;\n  return this;\n};\n\nNavigator.prototype.as = function (name) {\n  this._lastElement.name = name;\n  return this;\n};\n\nNavigator.prototype.go = function (vertex) {\n  if (!vertex) {\n    vertex = this._nextVar();\n  }\n  this._lastElement = vertex;\n  return this;\n};\n\nNavigator.prototype.triples = wrapCallback('triplesStream');\n\nNavigator.prototype.triplesStream = function (pattern) {\n\n  var stream = null;\n\n  var options = {\n    solution: this._initialSolution,\n    materialized: pattern\n  };\n  stream = this.db.searchStream(this._conditions, options);\n\n  return stream;\n};\n\nNavigator.prototype.solutions = Navigator.prototype.triples;\nNavigator.prototype.solutionsStream = Navigator.prototype.triplesStream;\nNavigator.prototype.contexts = Navigator.prototype.triples;\nNavigator.prototype.contextsStream = Navigator.prototype.triplesStream;\n\nNavigator.prototype.valuesStream = function () {\n  var stream, options;\n\n  stream = new NavigatorStream({\n    _lastElement: this._lastElement\n  });\n\n  if (this._conditions.length === 0) {\n    stream.end({});\n    return stream;\n  }\n\n  options = { solution: this._initialSolution };\n\n  pump(this.db.searchStream(this._conditions, options), stream);\n\n  return stream;\n};\n\nNavigator.prototype.values = function (cb) {\n  var that = this\n    , stream = this.valuesStream()\n    , collect = function(err, results) {\n        if (err) {\n          cb(err);\n          return;\n        }\n\n        results = results.reduce(function(acc, result) {\n          if (acc.indexOf(result) < 0) {\n            acc.push(result);\n          }\n          return acc;\n        }, []);\n\n        cb(null, results);\n      };\n\n  stream.pipe(new CallbackStream({\n    objectMode: true\n  }, collect));\n\n  return this;\n};\n\nmodule.exports = Navigator;\n","/home/travis/build/npmtest/node-npmtest-levelgraph/node_modules/levelgraph/lib/queryplanner.js":"/*\nCopyright (c) 2013-2017 Matteo Collina and LevelGraph Contributors\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar utilities = require('./utilities')\n  , queryMask = utilities.queryMask\n  , variablesMask = utilities.variablesMask\n  , JoinStream = require('./joinstream')\n  , SortJoinStream = require('./sortjoinstream')\n  , doSortQueryPlan\n  , steed = require('steed');\n\nfunction orderedPossibleIndex(keys) {\n  return Object.keys(utilities.defs).filter(function(index) {\n    return keys.every(function(key, pos) {\n      return utilities.defs[index][pos] === key;\n    });\n  });\n}\n\nfunction queryplanner(db, options) {\n  return function planner(query, callback) {\n    // dupes!\n    var result = [].concat(query);\n\n    steed.each(query, function(q, cb) {\n      var newq = queryMask(q)\n        , range = utilities.createQuery(newq);\n\n      if (db.db && db.db.approximateSize) {\n        db.db.approximateSize(range.start, range.end, function(err, size) {\n          if (err) {\n            size = Object.keys(variablesMask(q)).length;\n          }\n          q.size = size;\n          process.nextTick(cb);\n        });\n      } else {\n        q.size = Object.keys(variablesMask(q)).length;\n        process.nextTick(cb);\n      }\n    }, function(err) {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      result.sort(function compare(a, b) {\n        if (a.size < b.size) {\n          return -1;\n        }\n        if (a.size > b.size) {\n          return 1;\n        }\n        return 0;\n      });\n\n      result.forEach(function(q) {\n        delete q.size;\n      });\n\n      if (options.joinAlgorithm === 'sort' && result.length > 1) {\n        result.reduce(doSortQueryPlan);\n      }\n\n      result.forEach(function(q) {\n        if (!q.stream) {\n          q.stream = JoinStream;\n        }\n      });\n\n      callback(null, result);\n    });\n  };\n}\n\ndoSortQueryPlan = function(first, second) {\n  if (first === null || first.stream === JoinStream) {\n    return null;\n  }\n\n  var firstQueryMask = utilities.queryMask(first)\n    , secondQueryMask = utilities.queryMask(second)\n    , firstVariablesMask = utilities.variablesMask(first)\n    , secondVariablesMask = utilities.variablesMask(second)\n\n    , firstVariables = Object.keys(firstVariablesMask).map(function(key) {\n        return firstVariablesMask[key];\n      })\n\n    , secondVariables = Object.keys(secondVariablesMask).map(function(key) {\n        return secondVariablesMask[key];\n      })\n\n    , variableKey = function(obj, variable) {\n        return Object.keys(obj).filter(function(key) {\n          return obj[key].name === variable.name;\n        })[0];\n      }\n\n    , commonVariables = firstVariables.filter(function(firstVar) {\n        return secondVariables.some(function(secondVar) {\n          return firstVar.name === secondVar.name;\n        });\n      })\n\n    , firstIndexArray = Object.keys(firstQueryMask)\n    , secondIndexArray = Object.keys(secondQueryMask)\n\n    , commonValueKeys = firstIndexArray.filter(function(key) {\n        return secondIndexArray.indexOf(key) >= 0;\n      })\n\n    , firstIndexes\n    , secondIndexes;\n\n  if (commonVariables.length === 0) {\n    return null;\n  }\n\n  first.stream = first.stream ? first.stream : JoinStream;\n\n  firstIndexArray = firstIndexArray.filter(function(key) {\n    return commonValueKeys.indexOf(key) < 0;\n  });\n\n  secondIndexArray = secondIndexArray.filter(function(key) {\n    return commonValueKeys.indexOf(key) < 0;\n  });\n\n  commonValueKeys.forEach(function(key) {\n    firstIndexArray.unshift(key);\n    secondIndexArray.unshift(key);\n  });\n\n  commonVariables.sort(function(a, b) {\n    if (a.name < b.name) {\n      return -1;\n    } else if (a.name > b.name) {\n      return 1;\n    } else {\n      return 0;\n    }\n  });\n\n  commonVariables.forEach(function(commonVar) {\n    firstIndexArray.push(variableKey(firstVariablesMask, commonVar));\n    secondIndexArray.push(variableKey(secondVariablesMask, commonVar));\n  });\n\n  firstIndexes = orderedPossibleIndex(firstIndexArray);\n  secondIndexes = orderedPossibleIndex(secondIndexArray);\n\n  first.index = first.index || firstIndexes[0];\n  second.index = secondIndexes[0];\n  second.stream = SortJoinStream;\n\n  return second;\n};\n\nmodule.exports = queryplanner;\n","/home/travis/build/npmtest/node-npmtest-levelgraph/node_modules/levelgraph/lib/joinstream.js":"/*\nCopyright (c) 2013-2017 Matteo Collina and LevelGraph Contributors\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar Transform = require('readable-stream').Transform\n  , Variable = require('./variable')\n  , utilities = require('./utilities')\n  , inherits = require('inherits')\n  , queryMask = utilities.queryMask\n  , variablesMask = utilities.variablesMask\n  , maskUpdater = utilities.maskUpdater\n  , matcher = utilities.matcher;\n\nfunction JoinStream(options) {\n  if (!(this instanceof JoinStream)) {\n    return new JoinStream(options);\n  }\n\n  options.objectMode = true;\n\n  Transform.call(this, options);\n\n  this.triple = options.triple;\n  this.matcher = matcher(options.triple);\n  this.mask = queryMask(options.triple);\n  this.maskUpdater = maskUpdater(options.triple);\n  this.limit = options.limit;\n  this._limitCounter = 0;\n  this.db = options.db;\n  this._index = options.index;\n  this._ended = false;\n\n  var that = this;\n  this.once('pipe', function(source) {\n    source.on('error', function(err) {\n      that.emit('error', err);\n    });\n  });\n\n  this._onDataStream = function onDataStream(triple) {\n    var newsolution = that.matcher(that._lastSolution, triple);\n\n    if (that._ended || !newsolution) {\n      return;\n    }\n\n    that.push(newsolution);\n\n    if (that.limit && ++that._limitCounter === that.limit) {\n      that._readStream.destroy();\n      that._ended = true;\n      that.push(null);\n    }\n  };\n\n  this._indexPreferences = { index: this._index };\n\n  this._onErrorStream = function onErrorStream(err) {\n    that.emit('error', err);\n  };\n}\n\ninherits(JoinStream, Transform);\n\nJoinStream.prototype._transform = function transform(solution, encoding, done) {\n  if (this._ended) {\n    return done();\n  }\n\n  var that = this\n    , newMask = this.maskUpdater(solution, this.mask);\n\n  that._lastSolution = solution;\n  that._readStream = this.db.getStream(newMask, this._indexPreferences);\n\n  that._readStream.on('data', that._onDataStream);\n  that._readStream.on('error', that._onErrorStream);\n  that._readStream.on('end', done);\n};\n\nmodule.exports = JoinStream;\n","/home/travis/build/npmtest/node-npmtest-levelgraph/node_modules/levelgraph/lib/sortjoinstream.js":"/*\nCopyright (c) 2013-2017 Matteo Collina and LevelGraph Contributors\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar Transform = require('readable-stream').Transform\n  , Variable = require('./variable')\n  , utilities = require('./utilities')\n  , inherits = require('inherits')\n  , defs = utilities.defs\n  , queryMask = utilities.queryMask\n  , variablesMask = utilities.variablesMask\n  , matcher = utilities.matcher\n  , materializer = utilities.materializer\n  , createQuery = utilities.createQuery\n  , escape = utilities.escape\n  , genKey = utilities.genKey\n  , genKeys = utilities.genKeys;\n\nfunction genKeyWithEnding(key, triple) {\n  var result = key, def = defs[key], value, i;\n\n  for (i = 0; (value = triple[def[i]]) !== null &&\n              value !== undefined; i++) {\n    result += '::' + escape(value);\n  }\n\n  if (i < 3) {\n    result += '::\\udbff\\udfff';\n  }\n\n  return result;\n}\n\nfunction SortJoinStream(options) {\n  if (!(this instanceof SortJoinStream)) {\n    return new SortJoinStream(options);\n  }\n\n  options.objectMode = true;\n\n  Transform.call(this, options);\n\n  this.triple = options.triple;\n  this.matcher = matcher(options.triple);\n  this.db = options.db;\n\n  var that = this;\n  this.once('pipe', function(source) {\n    source.on('error', function(err) {\n      that.emit('error', err);\n    });\n  });\n\n  this._queryMask = queryMask(options.triple);\n  this._queryMask.filter = options.triple.filter;\n\n  this.index = options.index;\n\n  this._previousTriple = null;\n  this._lastDone = null;\n  this._start();\n  this.limit = options.limit;\n  this._limitCounter = 0;\n}\n\ninherits(SortJoinStream, Transform);\n\nSortJoinStream.prototype._nextTriple = function nextTriple(skip) {\n  var triple;\n\n  if (skip) {\n    this._previousTriple = null;\n  }\n\n  if (!this._previousTriple && this._readStream) {\n    this._previousTriple = this._readStream.read();\n  }\n\n  if (this._previousTriple) {\n    this._doRead(this._previousTriple);\n  } else if (!this._readStream) {\n    this.push(null);\n  }\n};\n\nSortJoinStream.prototype._start = function() {\n  var that = this;\n\n  this._readStream = this.db.getStream(this._queryMask, { index: this.index });\n\n  this._readStream.on('error', function(err) {\n    that.emit('error', err);\n  });\n\n  this._readStream.on('close', function() {\n    that._readStream = null;\n    if (!that._previousTriple) {\n      that._execLastDone();\n    }\n  });\n\n  this._readStream.on('readable', function() {\n    if (that._lastDone) {\n      that._nextTriple();\n    }\n  });\n};\n\nSortJoinStream.prototype._execLastDone = function() {\n  var that = this;\n  if(that._lastDone) {\n    var func = that._lastDone;\n    that._lastDone = null;\n    func();\n  }\n};\n\nSortJoinStream.prototype._flush = function(cb) {\n  var that = this;\n\n  this._execLastDone();\n\n  if (this._readStream) {\n    that._readStream.destroy();\n  }\n\n  this.push(null);\n\n  cb();\n};\n\nSortJoinStream.prototype._transform = function(solution, encoding, done) {\n  this._lastSolution = solution;\n  this._lastDone = done;\n  this._nextTriple(false);\n};\n\nSortJoinStream.prototype._doRead = function doRead(triple) {\n\n  var newsolution = this.matcher(this._lastSolution, triple)\n    , key\n    , otherKey\n    , done = this._lastDone;\n\n  key = genKeyWithEnding(this.index, materializer(this.triple, this._lastSolution));\n  otherKey = genKey(this.index, triple);\n\n  if (newsolution) {\n    this.push(newsolution);\n\n    if (this.limit && ++this._limitCounter === this.limit) {\n      this._previousTriple = null;\n      this._execLastDone();\n      this._readStream.destroy();\n      this._readStream = null;\n      return;\n    }\n  }\n\n  if (key > otherKey) {\n    this._nextTriple(true);\n  } else {\n    this._lastDone = null;\n    done();\n  }\n};\n\nmodule.exports = SortJoinStream;\n","/home/travis/build/npmtest/node-npmtest-levelgraph/node_modules/levelgraph/lib/writestream.js":"/*\nCopyright (c) 2013-2017 Matteo Collina and LevelGraph Contributors\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar Transform = require('readable-stream').Transform;\nvar genKey = require('./utilities').genKey;\nvar genKeys = require('./utilities').genKeys;\nvar defs = require('./utilities').defs;\nvar inherits = require('inherits');\n\nfunction genActions(triple) {\n  var json = JSON.stringify(triple)\n    , keys = genKeys(triple)\n    , i\n    , result = [];\n\n  for (i = 0; i < keys.length; i++) {\n    result.push({ key: keys[i], value: json });\n  }\n\n  return result;\n}\n\nfunction WriteStream(options) {\n  if (!(this instanceof WriteStream)) {\n    return new WriteStream(options);\n  }\n\n  options = options || {};\n  options.objectMode = true;\n\n  Transform.call(this, options);\n}\n\ninherits(WriteStream, Transform);\n\nWriteStream.prototype._transform = function(data, encoding, done) {\n  var that = this, i, actions = genActions(data);\n\n  for (i = 0; i < actions.length; i++) {\n    that.push(actions[i]);\n  }\n\n  done();\n};\n\nmodule.exports = WriteStream;\n","/home/travis/build/npmtest/node-npmtest-levelgraph/node_modules/levelgraph/benchmarks/reads.js":"\nvar level = require(\"level-test\")()\n\n  , levelgraph = require(\"../\")\n\n  , db = levelgraph(level())\n\n  , startCounts = 10000\n\n  , counts = startCounts\n\n  , startTime\n\n  , endTime\n\n  , doWrites = function() {\n      if(--counts === 0) {\n        startTime = new Date();\n        counts = startCounts;\n        doReads();\n      }\n\n      var triple = {\n        subject: \"s\" + counts,\n        predicate: \"p\" + counts,\n        object: \"o\" + counts\n      };\n\n      db.put(triple, doWrites);\n    }\n\n  , doReads = function() {\n      if(--counts === 0) {\n        endTime = new Date();\n        var totalTime = endTime - startTime;\n        console.log(\"total time\", totalTime);\n        console.log(\"reads/s\", startCounts / totalTime * 1000);\n        process.exit(0);\n        return;\n      }\n\n      var num = Math.round(Math.random() * startCounts);\n\n      var triple = {\n        subject: \"s\" + num\n      };\n\n      db.get(triple, doReads);\n    };\n\ndoWrites();\n","/home/travis/build/npmtest/node-npmtest-levelgraph/node_modules/levelgraph/benchmarks/readStream.js":"var level = require(\"level-test\")()\n\n  , levelgraph = require(\"../\")\n\n  , db = levelgraph(level())\n\n  , startCounts = 100000\n  , counts = startCounts\n\n  , startTime\n  , endTime\n\n  , doWrites = function() {\n      if(--counts === 0) {\n        startTime = new Date();\n        counts = startCounts;\n        doReads();\n        return;\n      }\n\n      var triple = {\n        subject: \"s\" + counts,\n        predicate: \"p\" + counts,\n        object: \"o\" + counts\n      };\n\n      db.put(triple, doWrites);\n    }\n\n  , doReads = function() {\n\n      var stream = db.getStream({});\n      stream.on(\"data\", function() {\n        counts--;\n      });\n      stream.on(\"end\", function() {\n        endTime = new Date();\n        var totalTime = endTime - startTime;\n        console.log(\"total time\", totalTime);\n        console.log(\"reads/s\", startCounts / totalTime * 1000);\n        db.close();\n      });\n    };\n\ndoWrites();\n","/home/travis/build/npmtest/node-npmtest-levelgraph/node_modules/levelgraph/benchmarks/searchStream.js":"var level = require(\"level-test\")()\n\n  , levelgraph = require(\"../\")\n\n  , db = levelgraph(level())\n\n  , startCounts = 100000\n  , counts = startCounts\n\n  , startTime\n  , endTime\n\n  , vertexes = [\"a\", \"b\"]\n\n  , doWrites = function() {\n      if(--counts === 0) {\n        startTime = new Date();\n        doReads();\n        return;\n      }\n\n      var triple = {\n          subject: vertexes[0]\n        , predicate: \"p\"\n        , object: vertexes[1]\n      };\n\n      vertexes.pop();\n      vertexes.unshift(\"v\" + counts);\n\n      db.put(triple, doWrites);\n    }\n\n  , doReads = function() {\n\n      var stream = db.searchStream([{\n          subject: db.v(\"a\")\n        , predicate: \"p\"\n        , object: db.v(\"b\")\n      }, {\n          subject: db.v(\"b\")\n        , predicate: \"p\"\n        , object: db.v(\"c\")\n      }]);\n\n      stream.on(\"data\", function() {\n        counts++;\n      });\n\n      stream.on(\"end\", function() {\n        endTime = new Date();\n        var totalTime = endTime - startTime;\n        console.log(\"total time\", totalTime);\n        console.log(\"total data\", counts);\n        console.log(\"join result/s\", counts / totalTime * 1000);\n        db.close();\n      });\n    };\n\ndoWrites();\n","/home/travis/build/npmtest/node-npmtest-levelgraph/node_modules/levelgraph/benchmarks/sortSearch.js":"var level = require(\"level-test\")()\n\n  , levelgraph = require(\"../\")\n\n  , db = levelgraph(level())\n\n  , startCounts = 100000\n  , counts = startCounts\n\n  , startTime\n  , endTime\n\n  , vertexes = [\"a\", \"b\"]\n\n  , doWrites = function() {\n      if(--counts === 0) {\n        startTime = new Date();\n        doReads();\n        return;\n      }\n\n      var triple1 = {\n            subject: vertexes[0],\n            predicate: \"p\",\n            object: vertexes[1]\n          }\n\n        , triple2 = {\n            subject: vertexes[0],\n            predicate: \"a\",\n            object: \"b\" + counts % 2\n          };\n\n      vertexes.pop();\n      vertexes.unshift(\"v\" + counts);\n\n      db.put([triple1, triple2], doWrites);\n    }\n\n  , doReads = function() {\n\n      var stream = db.searchStream([{\n        subject: db.v(\"a\"),\n        predicate: \"p\",\n        object: db.v(\"b\")\n      }, {\n        subject: db.v(\"a\"),\n        predicate: \"a\",\n        object: \"b0\"\n      }]);\n\n      stream.on(\"data\", function() {\n        counts++;\n      });\n      stream.on(\"end\", function() {\n        endTime = new Date();\n        var totalTime = endTime - startTime;\n        console.log(\"total time\", totalTime);\n        console.log(\"total data\", counts);\n        console.log(\"join result/s\", startCounts / totalTime * 1000);\n        db.close();\n      });\n    };\n\ndoWrites();\n","/home/travis/build/npmtest/node-npmtest-levelgraph/node_modules/levelgraph/benchmarks/writes.js":"\nvar level = require(\"level-test\")()\n  , LevelWriteStream = require(\"level-writestream\")\n  , levelgraph = require(\"../\")\n\n  , up = level()\n  , db = levelgraph(up)\n\n  , startCounts = 100000\n  , counts = startCounts\n\n  , startTime = new Date()\n  , endTime\n\n  , doBench = function() {\n      if(--counts === 0) {\n        endTime = new Date();\n        var totalTime = endTime - startTime;\n        console.log(\"total time\", totalTime);\n        console.log(\"writes/s\", startCounts / totalTime * 1000);\n        return;\n      }\n\n      var triple = {\n        subject: \"s\" + counts,\n        predicate: \"p\" + counts,\n        object: \"o\" + counts\n      };\n\n      db.put(triple, doBench);\n    };\n\nLevelWriteStream(up);\ndoBench();\n","/home/travis/build/npmtest/node-npmtest-levelgraph/node_modules/levelgraph/benchmarks/writesStream.js":"\nvar level = require(\"level-test\")()\n  , levelgraph = require(\"../\")\n\n  , up = level()\n  , db = levelgraph(up)\n\n  , startCounts = 100000\n  , counts = startCounts\n\n  , startTime = new Date()\n  , endTime\n\n  , ws\n\n  , doBench = function() {\n      if(--counts === 0) {\n        ws.end();\n        return;\n      }\n\n      var triple = {\n        subject: \"s\" + counts,\n        predicate: \"p\" + counts,\n        object: \"o\" + counts\n      };\n\n      ws.write(triple);\n      if (counts % 10 === 0) {\n        setImmediate(doBench);\n      } else {\n        doBench();\n      }\n    };\n\nws = db.putStream();\nws.on(\"close\", function() {\n  endTime = new Date();\n  var totalTime = endTime - startTime;\n  console.log(\"total time\", totalTime);\n  console.log(\"writes/s\", startCounts / totalTime * 1000);\n});\ndoBench();\n"}